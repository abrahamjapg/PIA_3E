import os
import pefile
import hashlib

def check_suspicious_sections(pe):
    """Verifica si el archivo PE tiene secciones sospechosas"""
    suspicious_sections = []
    
    for section in pe.sections:
        if section.SizeOfRawData == 0:
            suspicious_sections.append(section.Name.decode('utf-8').strip())
    
    if suspicious_sections:
        print(f"Secciones sospechosas encontradas: {suspicious_sections}")
    else:
        print("No se encontraron secciones sospechosas.")

def analyze_pe(file_path):
    """Analiza un archivo PE y muestra información básica y posibles secciones sospechosas"""
    try:
        pe = pefile.PE(file_path)
        print(f"\nAnalizando: {file_path}")
        print(f"Entrypoint: {hex(pe.OPTIONAL_HEADER.AddressOfEntryPoint)}")
        print(f"ImageBase: {hex(pe.OPTIONAL_HEADER.ImageBase)}")
        
        # Cálculo de hash MD5
        hash_md5 = hashlib.md5()
        with open(file_path, "rb") as f:
            for chunk in iter(lambda: f.read(4096), b""):
                hash_md5.update(chunk)
        file_hash = hash_md5.hexdigest()
        print(f"Hash MD5: {file_hash}")
        
        # Verificar secciones sospechosas
        check_suspicious_sections(pe)
        
    except Exception as e:
        print(f"Error analizando {file_path}: {e}")

def analyze_folder(folder_path):
    """Aplica el análisis PE a todos los archivos .exe de una carpeta"""
    for root, dirs, files in os.walk(folder_path):
        for file in files:
            file_path = os.path.join(root, file)
            if file.endswith('.exe'):
                analyze_pe(file_path)

def get_folder_path():
    """Solicita al usuario la ruta de una carpeta y valida que exista"""
    while True:
        folder_path = input("Por favor, ingresa la ruta de la carpeta a analizar: ")
        
        # Verificar si la ruta existe
        if os.path.exists(folder_path) and os.path.isdir(folder_path):
            return folder_path
        else:
            print(f"La ruta '{folder_path}' no es válida. Inténtalo de nuevo.")

def show_menu():
    """Muestra el menú al usuario y controla la ejecución"""
    print("===== Menú de Análisis de Archivos PE =====")
    
    while True:
        print("\n1. Ingresar ruta de carpeta para analizar")
        print("2. Salir")
        
        choice = input("Selecciona una opción (1 o 2): ")

        if choice == '1':
            folder_path = get_folder_path()
            analyze_folder(folder_path)
        elif choice == '2':
            print("Saliendo del programa...")
            break
        else:
            print("Opción no válida. Inténtalo de nuevo.")

# Punto de entrada principal del módulo
if __name__ == "__main__":
    show_menu()
